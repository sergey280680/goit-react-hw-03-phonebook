{"version":3,"sources":["components/PhoneBook/FormTextInput/FormTextInput.styled.jsx","components/PhoneBook/FormTextInput/FormTextInput.jsx","components/PhoneBook/PhoneBook.styled.jsx","components/PhoneBook/ListContacts/CardContact/CardContact.styled.jsx","components/PhoneBook/ListContacts/CardContact/CardContact.jsx","components/PhoneBook/ListContacts/ListContacts.styled.jsx","components/PhoneBook/ListContacts/ListContacts.jsx","components/PhoneBook/Search/Search.styled.jsx","components/PhoneBook/Search/Search.jsx","components/PhoneBook/PhoneBook.jsx","components/App/App.js","index.js"],"names":["Form","styled","form","Label","label","FormTextInput","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","type","pattern","title","required","onChange","Component","ContainerPhoneBook","div","Span","span","P","p","Li","li","CardContact","onDeliteContact","id","onClick","Ul","ul","ListContacts","events","map","SearchWrapper","Search","onReset","PhoneBook","contacts","filter","addName","data","contact","shortid","generate","alert","prevState","changeFilter","deliteContact","contactId","resetSearch","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","titleContacts","normalizedFilter","toLowerCase","filteredContacts","includes","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.053b03b2.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  border: 1px solid black;\n  width: 500px;\n  display: inline-flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 10px;\n  box-sizing: border-box;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n","import React, { Component } from \"react\";\nimport { Form, Label } from \"./FormTextInput.styled\";\n\nexport class FormTextInput extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label>\n          <span>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label>\n          <span> Number</span>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <button type=\"submit\">Add contact</button>{\" \"}\n      </Form>\n    );\n  }\n}\n","import styled from \"@emotion/styled\";\n\nexport const ContainerPhoneBook = styled.div`\n  background-color: #b38b8b96;\n  padding: 30px;\n`;\n\nexport const Span = styled.span`\n  color: tomato;\n  font-size: 30px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const P = styled.p`\n  display: inline-block;\n  margin: 5px;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { P, Li } from \"./CardContact.styled\";\n\nexport const CardContact = ({ name, number, onDeliteContact, id }) => {\n  return (\n    <Li>\n      <P>\n        {name}: {number}\n      </P>\n      <button onClick={() => onDeliteContact(id)}>Delite</button>\n    </Li>\n  );\n};\n\nCardContact.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Ul = styled.ul`\n  border: 1px solid black;\n  width: 500px;\n  box-sizing: border-box;\n  padding: 3px 13px;\n`;\n","import React from \"react\";\nimport { CardContact } from \"./CardContact/CardContact\";\nimport PropTypes from \"prop-types\";\nimport { Ul } from \"./ListContacts.styled\";\n\nexport const ListContacts = ({ events, onDeliteContact }) => {\n  return (\n    <Ul>\n      {events.map(({ id, name, number }) => (\n        <CardContact\n          key={id}\n          name={name}\n          id={id}\n          number={number}\n          onDeliteContact={onDeliteContact}\n        />\n      ))}\n    </Ul>\n  );\n};\n\nListContacts.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const SearchWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n`;\n","import React from \"react\";\nimport { Label, SearchWrapper } from \"./Search.styled\";\n\nexport const Search = ({ value, onChange, onReset }) => {\n  return (\n    <SearchWrapper>\n      <Label>\n        Поиск контакта\n        <input type=\"text\" value={value} onChange={onChange} />\n      </Label>\n      <button onClick={onReset}>x</button>\n    </SearchWrapper>\n  );\n};\n","import React, { Component } from \"react\";\nimport { FormTextInput } from \"components/PhoneBook/FormTextInput/FormTextInput\";\nimport { ContainerPhoneBook, Span } from \"./PhoneBook.styled\";\nimport { ListContacts } from \"components/PhoneBook/ListContacts/ListContacts\";\nimport { Search } from \"components/PhoneBook/Search/Search\";\nimport shortid from \"shortid\";\n\nexport class PhoneBook extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  }\n\n  addName = (data) => {\n    const contact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n\n    const contacts = this.state.contacts;\n    for (const name of contacts) {\n      const names = name.name;\n\n      if (names === contact.name) {\n        return alert(`${contact.name} is already in contacts`);\n      }\n    }\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  deliteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  resetSearch = () => {\n    this.setState({ filter: \"\" });\n  };\n\n  render() {\n    const { title, titleContacts } = this.props;\n    const { filter, contacts } = this.state;\n\n    //   фильтрация контактов не чуствительная к регистру\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filteredContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return (\n      <ContainerPhoneBook>\n        <h1>{title}</h1>\n        <FormTextInput onSubmit={this.addName} />\n        <h2>{titleContacts}</h2>\n\n        {contacts.length === 0 ? (\n          <h3>you have no contacts yet</h3>\n        ) : (\n          <>\n            <Search\n              value={filter}\n              onChange={this.changeFilter}\n              onReset={this.resetSearch}\n            />\n            {filteredContacts.length === 0 ? (\n              <h3>\n                you do not have contacts with the name <Span>{filter}</Span>\n              </h3>\n            ) : (\n              <ListContacts\n                events={filteredContacts}\n                onDeliteContact={this.deliteContact}\n              />\n            )}\n          </>\n        )}\n      </ContainerPhoneBook>\n    );\n  }\n}\n","import { PhoneBook } from \"components/PhoneBook/PhoneBook\";\n\nexport const App = () => {\n  return <PhoneBook title=\"Phonebook\" titleContacts=\"Contacts\" />;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}